import { GetServerSideProps } from "next";
import Head from "next/head";
import dbConnect from "utils/dbConnect";
import Coach from "model/CoachModel";
import { useForm, SubmitHandler } from "react-hook-form";
import { ReportData } from "@/utils/interface";

interface chlist {
  _id: string;
  coachType: string;
  coachNumber: string;
}

function CoachReportForm({ coachlist }: { coachlist: chlist[] }) {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<ReportData>();

  const onSubmit: SubmitHandler<ReportData> = (data) => {
    fetch("/api/addreport", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    }).then((res) => {
      res.json().then((d) => console.log(d));
    });
  };

  return (
    <>
      <Head>
        <title> Coach report form</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>coach report form</h1>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div>
            <label htmlFor="coach">Choose a coach:</label>
            <select
              {...register("_id", {
                validate: (value) => {
                  if (value === "") {
                    return false;
                  } else {
                    return true;
                  }
                },
              })}
              id="coach"
            >
              <option value={""}>--select coach--</option>
              {coachlist.map((cl) => (
                <option value={cl._id} key={cl._id}>
                  {cl.coachNumber}-{cl.coachType}
                </option>
              ))}
            </select>
            {errors._id && <span>select coach</span>}
          </div>
          <div>
            <label>Report Details :</label>
            <input
              type="text"
              {...register("reportDetails", { required: true })}
            />
            {errors.reportDetails && <span>report details requires</span>}
          </div>
          <div>
            <label>Escorting Fitter :</label>
            <input
              type="text"
              {...register("escortingFitter", { required: true })}
            />
            {errors.escortingFitter && <span>report details requires</span>}
          </div>
          <div>
            <input type="submit" />
          </div>
        </form>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  await dbConnect();
  const result = await Coach.find({}).select("coachType coachNumber");
  return {
    props: {
      coachlist: result.map((r) => {
        return {
          _id: r._id.toString(),
          coachType: r.coachType,
          coachNumber: r.coachNumber,
        };
      }),
    },
  };
};
export default CoachReportForm;
